[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.ruff.format]
exclude = ["third_party"]

[tool.ruff]
line-length = 127
target-version = "py310"
exclude = [
    "third_party",
    "cleanba/legacy_scripts",
]


[tool.ruff.lint]
# Enable the isort rules.
extend-select = ["I"]

[tool.ruff.lint.isort]
known-third-party = ["wandb"]

[tool.pytest.ini_options]
testpaths = ["tests"]  # ignore third_party dir for now
markers = [
    "slow",
    "envpool: tests that use Envpool and thus won't run on Mac",
]

[tool.pyright]
exclude = [
	".venv/**",  # venv
    "wandb/**",  # Saved old codes
    "third_party/**",  # Other libraries
]
reportPrivateImportUsage = "warning"

[project]
name = "train-learned-planner"
version = "1.0.0"
description = "Code for training a DRC planner on Sokoban"
authors = [
    {name="Adri√† Garriga-Alonso", email="adria@far.ai"},
    {name="Mohammad Taufeeque", email="taufeeque@far.ai"},
    {name="Costa Huang", email="costa.huang@outlook.com"},
]
readme = "README.md"

dependencies = [
    "rich",
    "tensorboard",
    "flax",
    "optax",
    "huggingface-hub",
    "wandb",
    "tensorboardx",
    "chex",
    "gymnasium<1",
    "opencv-python",
    "moviepy",
    "rlax",
    "farconf @ git+https://github.com/AlignmentResearch/farconf.git",
    "ray[tune]",
    "matplotlib",
    "craftax",
    "jax==0.5.1",
]
[project.optional-dependencies]
dev = [
    "pre-commit",
    "pyright",
    "ruff",
    "pytest",
]

launch-jobs = [
    "names_generator",
    "GitPython",
]

[tool.setuptools]
packages = ["cleanba"]

[tool.uv.workspace]
members = ["a/hello-world"]
